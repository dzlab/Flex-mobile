<?xml version="1.0" encoding="utf-8"?>
<s:TabbedViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009" applicationComplete="applicationCompleteHandler(event)"
								  xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import spark.events.IndexChangeEvent;
			
			protected function applicationCompleteHandler(event:FlexEvent):void
			{
				tabbedNavigator.addEventListener(IndexChangeEvent.CHANGE,onTabChange);
				trace(tabbedNavigator.skin);
				trace(tabbedNavigator.tabBar.skin);
				trace("State " + this.currentState);
			}

			protected function onTabChange(event:IndexChangeEvent):void
			{
				trace("Tab changed! " + event.newIndex);
				// When the tab changes, reset the old view back to the settings 
				if (event.oldIndex==0)
					slideNav.popToFirstView();
				else if (event.oldIndex==1)
					flipNav.popToFirstView();
				else if (event.oldIndex==2)
					zoomNav.popToFirstView();
				else if (event.oldIndex==3)
					fadeNav.popToFirstView();
			}
		]]>
	</fx:Script>
	<fx:Style source="styles.css"/>
	
	<s:ViewNavigator id="slideNav" label="Slide" width="100%" height="100%" firstView="views.SlideView" visible="false"/>
	<s:ViewNavigator id="flipNav" label="Flip" width="100%" height="100%" firstView="views.FlipView" visible="false"/>
	<s:ViewNavigator id="zoomNav" label="Zoom" width="100%" height="100%" firstView="views.ZoomView" visible="false"/>
	<s:ViewNavigator id="fadeNav" label="Fade" width="100%" height="100%" firstView="views.FadeView" visible="false"/>

</s:TabbedViewNavigatorApplication>
